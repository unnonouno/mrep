#!/usr/bin/env python

import argparse
import sys

import miura.builder
import miura.pattern
import miura.morph
import miura.printer

def run(f, printer):
    parser = miura.morph.MeCabParser()
    for s in f:
        ms = parser.parse(s)
        results = miura.pattern.find(ms, matcher)
        if len(results) == 0:
            continue

        printer.print_result(ms, results, sys.stdout)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='MIURA: morpheme i u regexp a')
    parser.add_argument('pattern', help='pattern')
    parser.add_argument('file', nargs='*', help='data file')
    parser.add_argument('-o', '--only-matching', action='store_true',
                        help='print only matching')
    args = parser.parse_args()

    try:
        matcher = miura.builder.parse(args.pattern)
    except miura.builder.ParseError as e:
        sys.stderr.write('%s (@%d)\n' % (str(e), e.pos))
        sys.exit(3)

    ESCAPE = '\033[%sm'
    RED = ESCAPE % '31'
    ENDC = ESCAPE % '0'

    if args.only_matching:
        printer = miura.printer.OnlyMatchPrinter()
    else:
        printer = miura.printer.Printer(RED, ENDC)

    if len(args.file) > 0:
        for file in args.file:
            with open(file) as f:
                run(f, printer)
    else:
        run(sys.stdin, printer)

