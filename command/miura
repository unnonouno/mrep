#!/usr/bin/env python

import argparse
import sys

import miura.builder
import miura.pattern
import miura.morph

def run(f):
    for s in f:
        ms = miura.morph.parse(s)
        results = miura.pattern.find(ms, matcher)
        if len(results) == 0:
            continue

        matched = [False] * len(ms)
        for result in results:
            for i in range(result['begin'], result['end']):
                matched[i] = True
        for i, m in enumerate(ms):
            if matched[i] and (not matched[i - 1] or i == 0):
                sys.stdout.write(RED)
            sys.stdout.write(m['surface'])
            if (i == len(ms) - 1) or not matched[i + 1] and matched[i]:
                sys.stdout.write(ENDC)
            sys.stdout.write(' ')
        sys.stdout.write('\n')

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='MIURA: morpheme i u regexp a')
    parser.add_argument('pattern', help='pattern')
    parser.add_argument('file', nargs='*', help='data file')
    args = parser.parse_args()

    matcher = miura.builder.parse(args.pattern)

    ESCAPE = '\033[%sm'
    RED = ESCAPE % '31'
    ENDC = ESCAPE % '0'

    if len(args.file) > 0:
        for file in args.file:
            with open(file) as f:
                run(f)
    else:
        run(sys.stdin)

